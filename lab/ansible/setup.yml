# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2022 Dell Inc, or its subsidiaries.
---

- name:
  hosts: tor
  gather_facts: false
  tasks:
    - name: run show version on remote devices
      arista.eos.eos_command:
        commands: show version

- name:
  hosts: hostbmcs
  become: yes
  tasks:
    - name: Get Firmware Inventory
      community.general.redfish_info:
        category: Update
        command: GetFirmwareInventory
        baseuri: "{{ ansible_host }}"
        username: "{{ ansible_user | default(ansible_env.USER) }}"
        password: "{{ ansible_password }}"
      register: result

- name: Set up for OPI LAB environment
  hosts: hostservers,DPUs
  become: yes
  tasks:
    - import_tasks: debian.yml
      when: ansible_os_family == 'Debian'

    - import_tasks: redhat.yml
      when: ansible_os_family == 'RedHat'

    #- import_tasks: suse.yml
    #  when: ansible_os_family == 'Suse'

    - name: Install other generic packages
      ansible.builtin.package:
        name: python3-pip,sshpass,git
        state: present

    - name: Testing
      shell: uname -a

    # TODO: copy correct telegraf.conf file per host...

    - name: Run telegraf container
      community.docker.docker_container:
        name: telegraf
        image: docker.io/library/telegraf:1.29
        state: started
        restart: true
        detach: true
        network_mode: host
        restart_policy: always
        mounts:
          - type: bind
            source: /root/telegraf.conf
            target: /etc/telegraf/telegraf.conf
            read_only: true

- name:
  hosts: Management
  become: yes
  tasks:
    - name: Run Monitoring OTEL, Prometheus, Grafana
      community.docker.docker_compose_v2:
        project_src: /root/opi-poc/lab/otel
      register: output

    - name: Run telegraf container for TOR arista switch
      community.docker.docker_container:
        name: telegraf_arista
        image: docker.io/library/telegraf:1.29
        state: started
        restart: true
        detach: true
        network_mode: host
        restart_policy: always
        mounts:
          - type: bind
            source: /root/telegraf.conf.arista
            target: /etc/telegraf/telegraf.conf
            read_only: true

- name:
  hosts: mev
  become: yes
  tasks:
    - name: Install socat
      ansible.builtin.package:
        name: socat
        state: present
        sslverify: false
    # TODO: copy socat-otel unit file
    - name: Enable and Start service socat-otel
      ansible.builtin.service:
        name: socat-otel
        enabled: yes
        state: started

